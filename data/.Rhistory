gender_map <- merge(worldmap, raw_gender, by="Country.Name")
library(stringr)
for (i in 6:ncol(gender_map)-1){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
if(i < 31){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("countries.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[1] <- paste('Country.Name')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
names(df.need)[2] <- paste('Country.Name')
gender_map <- merge(worldmap, raw_gender, by="Country.Name")
library(stringr)
for (i in 6:ncol(gender_map)){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
if(i < 31){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("countries.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[1] <- paste('Country.Name')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
names(df.need)[2] <- paste('Country.Name')
gender_map <- merge(worldmap, raw_gender, by="Country.Name")
library(stringr)
for (i in 6:ncol(gender_map)){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 31){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("countries.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[1] <- paste('Country.Name')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
names(df.need)[2] <- paste('Country.Name')
gender_map <- merge(worldmap, raw_gender, by="Country.Name")
library(stringr)
for (i in 6:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 31){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = '2016')
gender_map%>%
filter(Country.Code == 'RUS')
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("countries.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[1] <- paste('Country.Name')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
names(df.need)[2] <- paste('Country.Name')
gender_map <- merge(worldmap, raw_gender, by="Country.Name")
library(stringr)
for (i in 6:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 31){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Country.Code == 'RUS')
View(worldmap)
View(raw_gender)
newmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
View(newmap)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('NOC')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 14:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
names(gender_map)[14]
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Country.Code == 'RUS')
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = '2016')
gender_map[15]
gender_map[[15]]
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
gender_map[i+1] <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[i+1]]))[gender_map[[i+1]]]))
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
df1 <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[i+1]]))[gender_map[[i+1]]]))
a <- as.factor(gender_map[[i+1]])
print(1)
print(a)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = 2016)
gender_map$2016 <- suppressWarnings(as.numeric(
levels(as.factor(gender_map$2016))[gender_map$2016))
gender_map$2016
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = `2016`)
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = gender_map$`2016`)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(fill = gender_map$`2016`)
gender_map$`2016` <- suppressWarnings(as.numeric(
levels(as.factor(gender_map$`2016`))[gender_map$`2016`))
gender_map[31]
gender_map[40]
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map[40] <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]]))
a <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]]))
a <- suppressWarnings(data.frame(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]])))
View(a)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill='2016'))
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=2016))
#plotting
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill='2016'))
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
#plotting
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
str(gender_map$`2016`)
str(gender_map[40])
str(gender_map[[40]])
gender_map[[40]] <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]]))
gender_map[[39]] <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[39]]))[gender_map[[39]]]))
gender_map[39] <- suppressWarnings(as.numeric(
levels(as.factor(gender_map[[39]]))[gender_map[[39]]]))
a <- levels(as.factor(gender_map[[39]]))[gender_map[[39]]]))
a <- levels(as.factor(gender_map[[39]]))[gender_map[[39]]])
a <- levels(as.factor(gender_map[[39]]))[gender_map[[39]]]
a <- gender_map[[39]]
print(a)
gender_map[39] <- c(suppressWarnings(as.numeric(
levels(as.factor(gender_map[[39]]))[gender_map[[39]]])), NA)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
gender_map[i] <- c(suppressWarnings(as.numeric(
levels(as.factor(gender_map[[i]]))[gender_map[[i]]])), NA)
}
}
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
gender_map[40] <- c(suppressWarnings(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]],NA)
#plotting
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
gender_map[40] <- c(suppressWarnings(as.numeric(
levels(as.factor(gender_map[[40]]))[gender_map[[40]]],NA)
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')
test <- gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')
View(test)
setwd("D:/2018.07 R_DataAnalysis/2018SUMMER_R/data")
#import data
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if(i < 41){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]]) /2
}
}
test <- gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')
View(test)
test <- gender_map%>%
filter(Series.Name == 'Population, female (% of total)')%>%
select('2016')
View(test)
gender_map%>%
filter(Series.Name == 'Expected years of schooling, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Population, female (% of total)')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
#plotting
gender_map%>%
filter(Series.Name == 'Children out of school, primary, female')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Primary education, pupils (% female)')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Adolescent fertility rate (births per 1,000 women ages 15-19)')%>%
select('2016')%>%
ggplot() +
geom_sf(aes(fill=`2016`))
gender_map%>%
filter(Series.Name == 'Life expectancy at birth, female (years)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`))
#plotting
gender_map%>%
filter(Series.Name == 'Adjusted net enrollment rate, primary, female (% of primary school age children)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`))
#plotting
gender_map%>%
filter(Series.Name == 'Adjusted net enrollment rate, primary, female (% of primary school age children)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`, reverse = T))
#plotting
gender_map%>%
filter(Series.Name == 'Adjusted net enrollment rate, primary, female (% of primary school age children)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`), reverse = T)
gender_map%>%
filter(Series.Name == 'Adjusted net enrollment rate, primary, female (% of primary school age children)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`))+
scale_fill_gradient(low = "#56B1F7", high = "#132B43")
#plotting
gender_map%>%
filter(Series.Name == 'Primary education, pupils (% female)')%>%
select('2000')%>%
ggplot() +
geom_sf(aes(fill=`2000`))+
scale_fill_gradient(low = "#FFE4F3", high = "#7C0A02")
#plotting
gender_map%>%
filter(Series.Name == 'Primary education, pupils (% female)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2000`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
#plotting
gender_map%>%
filter(Series.Name == 'Primary education, pupils (% female)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2010`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
gender_map%>%
filter(Series.Name == 'Employers, female (% of female employment) (modeled ILO estimate)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2010`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
